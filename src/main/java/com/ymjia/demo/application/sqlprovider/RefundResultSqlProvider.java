package com.ymjia.demo.application.sqlprovider;

import com.ymjia.demo.application.example.RefundResultExample;
import com.ymjia.demo.application.model.RefundResult;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class RefundResultSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String countByExample(RefundResultExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("refund_result");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String deleteByExample(RefundResultExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("refund_result");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String insertSelective(RefundResult record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("refund_result");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=BIGINT}");
        }
        
        if (record.getVersion() != null) {
            sql.VALUES("version", "#{version,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeType() != null) {
            sql.VALUES("trade_type", "#{tradeType,jdbcType=VARCHAR}");
        }
        
        if (record.getInstCode() != null) {
            sql.VALUES("inst_code", "#{instCode,jdbcType=VARCHAR}");
        }
        
        if (record.getRequestSn() != null) {
            sql.VALUES("request_sn", "#{requestSn,jdbcType=VARCHAR}");
        }
        
        if (record.getTimeStamp() != null) {
            sql.VALUES("time_stamp", "#{timeStamp,jdbcType=VARCHAR}");
        }
        
        if (record.getEncryptData() != null) {
            sql.VALUES("encrypt_data", "#{encryptData,jdbcType=VARCHAR}");
        }
        
        if (record.getSignature() != null) {
            sql.VALUES("signature", "#{signature,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigOrderId() != null) {
            sql.VALUES("orig_order_id", "#{origOrderId,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigRequestSn() != null) {
            sql.VALUES("orig_request_sn", "#{origRequestSn,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=VARCHAR}");
        }
        
        if (record.getAmt() != null) {
            sql.VALUES("amt", "#{amt,jdbcType=VARCHAR}");
        }
        
        if (record.getReqResvFld() != null) {
            sql.VALUES("req_resv_fld", "#{reqResvFld,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateAt() != null) {
            sql.VALUES("create_at", "#{createAt,jdbcType=BIGINT}");
        }
        
        if (record.getUpdateAt() != null) {
            sql.VALUES("update_at", "#{updateAt,jdbcType=BIGINT}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String selectByExample(RefundResultExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("version");
        sql.SELECT("trade_type");
        sql.SELECT("inst_code");
        sql.SELECT("request_sn");
        sql.SELECT("time_stamp");
        sql.SELECT("encrypt_data");
        sql.SELECT("signature");
        sql.SELECT("orig_order_id");
        sql.SELECT("orig_request_sn");
        sql.SELECT("status");
        sql.SELECT("amt");
        sql.SELECT("req_resv_fld");
        sql.SELECT("create_at");
        sql.SELECT("update_at");
        sql.FROM("refund_result");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        RefundResult record = (RefundResult) parameter.get("record");
        RefundResultExample example = (RefundResultExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("refund_result");
        
        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=BIGINT}");
        }
        
        if (record.getVersion() != null) {
            sql.SET("version = #{record.version,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeType() != null) {
            sql.SET("trade_type = #{record.tradeType,jdbcType=VARCHAR}");
        }
        
        if (record.getInstCode() != null) {
            sql.SET("inst_code = #{record.instCode,jdbcType=VARCHAR}");
        }
        
        if (record.getRequestSn() != null) {
            sql.SET("request_sn = #{record.requestSn,jdbcType=VARCHAR}");
        }
        
        if (record.getTimeStamp() != null) {
            sql.SET("time_stamp = #{record.timeStamp,jdbcType=VARCHAR}");
        }
        
        if (record.getEncryptData() != null) {
            sql.SET("encrypt_data = #{record.encryptData,jdbcType=VARCHAR}");
        }
        
        if (record.getSignature() != null) {
            sql.SET("signature = #{record.signature,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigOrderId() != null) {
            sql.SET("orig_order_id = #{record.origOrderId,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigRequestSn() != null) {
            sql.SET("orig_request_sn = #{record.origRequestSn,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=VARCHAR}");
        }
        
        if (record.getAmt() != null) {
            sql.SET("amt = #{record.amt,jdbcType=VARCHAR}");
        }
        
        if (record.getReqResvFld() != null) {
            sql.SET("req_resv_fld = #{record.reqResvFld,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateAt() != null) {
            sql.SET("create_at = #{record.createAt,jdbcType=BIGINT}");
        }
        
        if (record.getUpdateAt() != null) {
            sql.SET("update_at = #{record.updateAt,jdbcType=BIGINT}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("refund_result");
        
        sql.SET("id = #{record.id,jdbcType=BIGINT}");
        sql.SET("version = #{record.version,jdbcType=VARCHAR}");
        sql.SET("trade_type = #{record.tradeType,jdbcType=VARCHAR}");
        sql.SET("inst_code = #{record.instCode,jdbcType=VARCHAR}");
        sql.SET("request_sn = #{record.requestSn,jdbcType=VARCHAR}");
        sql.SET("time_stamp = #{record.timeStamp,jdbcType=VARCHAR}");
        sql.SET("encrypt_data = #{record.encryptData,jdbcType=VARCHAR}");
        sql.SET("signature = #{record.signature,jdbcType=VARCHAR}");
        sql.SET("orig_order_id = #{record.origOrderId,jdbcType=VARCHAR}");
        sql.SET("orig_request_sn = #{record.origRequestSn,jdbcType=VARCHAR}");
        sql.SET("status = #{record.status,jdbcType=VARCHAR}");
        sql.SET("amt = #{record.amt,jdbcType=VARCHAR}");
        sql.SET("req_resv_fld = #{record.reqResvFld,jdbcType=VARCHAR}");
        sql.SET("create_at = #{record.createAt,jdbcType=BIGINT}");
        sql.SET("update_at = #{record.updateAt,jdbcType=BIGINT}");
        
        RefundResultExample example = (RefundResultExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(RefundResult record) {
        SQL sql = new SQL();
        sql.UPDATE("refund_result");
        
        if (record.getVersion() != null) {
            sql.SET("version = #{version,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeType() != null) {
            sql.SET("trade_type = #{tradeType,jdbcType=VARCHAR}");
        }
        
        if (record.getInstCode() != null) {
            sql.SET("inst_code = #{instCode,jdbcType=VARCHAR}");
        }
        
        if (record.getRequestSn() != null) {
            sql.SET("request_sn = #{requestSn,jdbcType=VARCHAR}");
        }
        
        if (record.getTimeStamp() != null) {
            sql.SET("time_stamp = #{timeStamp,jdbcType=VARCHAR}");
        }
        
        if (record.getEncryptData() != null) {
            sql.SET("encrypt_data = #{encryptData,jdbcType=VARCHAR}");
        }
        
        if (record.getSignature() != null) {
            sql.SET("signature = #{signature,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigOrderId() != null) {
            sql.SET("orig_order_id = #{origOrderId,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigRequestSn() != null) {
            sql.SET("orig_request_sn = #{origRequestSn,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=VARCHAR}");
        }
        
        if (record.getAmt() != null) {
            sql.SET("amt = #{amt,jdbcType=VARCHAR}");
        }
        
        if (record.getReqResvFld() != null) {
            sql.SET("req_resv_fld = #{reqResvFld,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateAt() != null) {
            sql.SET("create_at = #{createAt,jdbcType=BIGINT}");
        }
        
        if (record.getUpdateAt() != null) {
            sql.SET("update_at = #{updateAt,jdbcType=BIGINT}");
        }
        
        sql.WHERE("id = #{id,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table refund_result
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, RefundResultExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<RefundResultExample.Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            RefundResultExample.Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<RefundResultExample.Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    RefundResultExample.Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}